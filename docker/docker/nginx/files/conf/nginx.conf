#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# see: http://nginx.org/en/docs/ngx_core_module.html
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# 実行ユーザー
# dafault: user nobody nobody
user  nginx;

# 起動するワーカープロセスの数
#   [調べ方]: cat /proc/cpuinfo | grep processor
# default: 1
worker_processes  auto;

# 1つのワーカプロセスにおけるファイルディスクリプタの上限
#   [計算]: OS全体で扱えるファイル数 / ワーカープロセス数 < 設定すべき値 && worker_connections * 3 ~ 4 < 設定すべき値
#   [調べ方]: cat /proc/sys/fs/file-max
#   [Sample]: # 524288(OS) / 4(worker_processes) = 117964.8 && 2048(worker_connections) * 4 = 8192
# default: なし
worker_rlimit_nofile  8192; 

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    # 1つのワーカープロセスで同時に複数のアクセスを受け入れるかどうか
    # default: off
    multi_accept  off;

    # ワーカープロセスの同時接続数の設定
    # default: 1024
    worker_connections  2048;

    # 接続処理方法の設定
    #   [調べ方]: uname -r
    # default: 自動選択される
    use  epoll; # Linux 2.6+で効果のある方法
}

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# see: https://nginx.org/en/docs/http/ngx_http_core_module.html
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    # エラーページとレスポンスにバージョンを表示するかどうか
    # default: on
    server_tokens  off;

    # sendfile APIを使用してカーネルにキャッシュを持ち効率をあげるかどうか
    # defalut: off
    sendfile  on;

    # sendfileが有効な時にTCP_CORKソケットオプションを使うかどうか
    # レスポンスヘッダとファイルの内容をまとめて送信し、パケット数で効率を良くする
    # default: off
    tcp_nopush  on;

    # 送信バッファを溜めずにすぐに送信するかどうか。(リアルタイム性とNW負荷の天秤)
    # ※ KeepAlive状態の時のみ
    # default: on
    tcp_nodelay  on;

    # KeepAliveのタイムアウトまでの秒数 (パフォーマンスとリソースの天秤)
    # AWS ALBのデフォルトが60秒なのでそれ以上にしておくと良いかも
    # default: 75
    keepalive_timeout  65;

    # リクエストボディのサイズ上限の設定
    # ※ これを超えると413エラーになる。
    # ※ php-fpmの設定と合わせる。
    # defalut: 1M
    client_max_body_size 20M;

    # MIMEタイプと拡張子関連付けを読み込む
    include  /etc/nginx/mime.types;

    # 拡張子の関連づけで判断できない場合に使用されるMIMEの定義
    # default: text/plain
    default_type  application/octet-stream;

    # タイプハッシュテーブルの最大値の設定
    # default: 1024
    types_hash_max_size 2048;

    # クライアントからの要求ヘッダーを読み取るためのバッファサイズの設定
    # ※ Cookieなどが大きい場合は調整が必要
    # default: 1k
    client_header_buffer_size 64k;

    # クライアントからの要求ヘッダーをバッファリングするサイズの設定
    # ※ Cookieなどが大きい場合は調整が必要
    # default: 4 8k
    large_client_header_buffers 4 64k;

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
# see: http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    # FastCGIからのレスポンスをバッファリングするかどうか
    # default: on
    fastcgi_buffering  on;

    # FastCGIからのレスポンスをバッファリングするサイズの設定
    # ※ Cookieなどが大きい場合は調整が必要
    # ※ see: https://gist.github.com/magnetikonline/11312172#determine-fastcgi-response-sizes%E3%82%88%E3%82%8A
    # default: 4k|8k
    fastcgi_buffer_size 128k;

    # 接続ごとにFastCGIサーバからのレスポンスをバッファリングするサイズと数の設定
    # ※ fastcgi_buffer_sizeにレスポンスが収まりきらなかった場合に使用される
    # default: 8 4k|8k
    fastcgi_buffers 4 256k;

    # FastCGIからのレスポンスを受信しているときの最大バッファサイズの設定
    # ※ fastcgi_buffer_sizeの2倍程度
    # default: 8k|16k
    fastcgi_busy_buffers_size 256k;

    # 一時ファイルに一度に書き込まれるデータサイズの設定
    # ※ FastCGIからのレスポンスが収まりきらない場合に一時ファイルに書き出される
    # ※ fastcgi_buffer_sizeの2倍程度
    # default: 8k|16k
    fastcgi_temp_file_write_size 256k;

    #=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    # see: http://nginx.org/en/docs/http/ngx_http_gzip_module.html
    #=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    # レスポンスを圧縮するかどうか
    # default: off
    gzip on;

    # 圧縮する応答の最小のサイズの設定(この値以上で圧縮する)
    # default: 20
    gzip_min_length 1024;

    # 圧縮するコンテツタイプの設定
    # default: text/plain application/xml
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;

    # Vary: Accept-Encodingをレスポンスヘッダーに追加するかどうか
    # default: off
    gzip_vary on;

    # プロキシーからのリクエストでも圧縮するかどうか
    # default: gzip_proxied off
    gzip_proxied any; # すべてのリクエストで圧縮する

    # バーチャルホストの設定を読み込む
    include /etc/nginx/conf.d/*.conf;
}